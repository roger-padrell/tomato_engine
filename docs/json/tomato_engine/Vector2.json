{"orig":"/home/roger/Projects/nim/tomato_engine/src/tomato_engine/Vector2.nim","nimble":"tomato_engine","moduleDescription":"\n<h1><a class=\"toc-backref\" id=\"vector2\" href=\"#vector2\">Vector2</a></h1><p>Utils for managing 2D positions and using them For everything in this document you need to import the tomato_engine library (only the Vector2 if you want)</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">import</span> <span class=\"Identifier\">tomato_engine</span> <span class=\"Comment\"># whole library</span>\n<span class=\"Keyword\">import</span> <span class=\"Identifier\">tomato_engine</span> <span class=\"Comment\"># only the Vector2</span></pre> You don't need to import both, because in the whole library, the Vector2 comes included</p>\n\n<h1><a class=\"toc-backref\" id=\"create-a-vector2\" href=\"#create-a-vector2\">Create a Vector2</a></h1><p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># X: 1, Y:1</span></pre></p>\n","entries":[{"name":"Vector2","type":"skType","line":4,"col":11,"code":"Vector2 = tuple[x: float, y: float]"},{"name":"Add","type":"skProc","line":21,"col":0,"code":"proc Add(a: Vector2; b: Vector2): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Add two Vector2</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">0</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">)</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">0</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Add</span><span class=\"Punctuation\">(</span><span class=\"Identifier\">b</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># (1,1)</span></pre></p>\n"},{"name":"Divide","type":"skProc","line":30,"col":0,"code":"proc Divide(a: Vector2; n: float): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"n","type":"float"}],"pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"Multiply","type":"skProc","line":35,"col":0,"code":"proc Multiply(a: Vector2; n: float): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"n","type":"float"}],"pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"Subtract","type":"skProc","line":38,"col":0,"code":"proc Subtract(a: Vector2; b: Vector2): Vector2 {.raises: [], tags: [],\n    forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"Equals","type":"skProc","line":41,"col":0,"code":"proc Equals(a: Vector2; b: Vector2): bool {.raises: [], tags: [], forbids: [].}","signature":{"return":"bool","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"Dot","type":"skProc","line":47,"col":0,"code":"proc Dot(a: Vector2; b: Vector2): float {.raises: [], tags: [], forbids: [].}","signature":{"return":"float","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"down","type":"skProc","line":51,"col":0,"code":"proc down(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"left","type":"skProc","line":54,"col":0,"code":"proc left(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"right","type":"skProc","line":57,"col":0,"code":"proc right(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"up","type":"skProc","line":60,"col":0,"code":"proc up(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"one","type":"skProc","line":63,"col":0,"code":"proc one(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"zero","type":"skProc","line":66,"col":0,"code":"proc zero(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"negativeInfinity","type":"skProc","line":69,"col":0,"code":"proc negativeInfinity(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"positiveInfinity","type":"skProc","line":72,"col":0,"code":"proc positiveInfinity(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"magnitude","type":"skProc","line":76,"col":0,"code":"proc magnitude(a: Vector2): float {.raises: [], tags: [], forbids: [].}","signature":{"return":"float","arguments":[{"name":"a","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"normalized","type":"skProc","line":79,"col":0,"code":"proc normalized(a: Vector2): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"this","type":"skProc","line":83,"col":0,"code":"proc this(a: Vector2): array[2, float] {.raises: [], tags: [], forbids: [].}","signature":{"return":"array[2, float]","arguments":[{"name":"a","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"ToString","type":"skProc","line":87,"col":0,"code":"proc ToString(a: Vector2): string {.raises: [], tags: [], forbids: [].}","signature":{"return":"string","arguments":[{"name":"a","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]}}]}