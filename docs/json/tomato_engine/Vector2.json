{"orig":"/home/roger/Projects/nim/tomato_engine/src/tomato_engine/Vector2.nim","nimble":"tomato_engine","moduleDescription":"\n<h1><a class=\"toc-backref\" id=\"vector2\" href=\"#vector2\">Vector2</a></h1><p>Utils for managing 2D positions and using them For everything in this document you need to import the tomato_engine library (only the Vector2 if you want)</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">import</span> <span class=\"Identifier\">tomato_engine</span> <span class=\"Comment\"># whole library</span>\n<span class=\"Keyword\">import</span> <span class=\"Identifier\">tomato_engine</span> <span class=\"Comment\"># only the Vector2</span></pre> You don't need to import both, because in the whole library, the Vector2 comes included</p>\n\n<h1><a class=\"toc-backref\" id=\"create-a-vector2\" href=\"#create-a-vector2\">Create a Vector2</a></h1><p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># X: 1, Y:1</span></pre></p>\n","entries":[{"name":"Vector2","type":"skType","line":5,"col":11,"code":"Vector2 = tuple[x: float, y: float]"},{"name":"Add","type":"skProc","line":22,"col":0,"code":"proc Add(a: Vector2; b: Vector2): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Add two Vector2</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">0</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">)</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">0</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Add</span><span class=\"Punctuation\">(</span><span class=\"Identifier\">b</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># (1,1)</span></pre></p>\n"},{"name":"Divide","type":"skProc","line":31,"col":0,"code":"proc Divide(a: Vector2; n: float): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"n","type":"float"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Divide a Vector2 by a number</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Divide</span><span class=\"Punctuation\">(</span><span class=\"DecNumber\">2</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># (2,2)</span></pre></p>\n"},{"name":"Multiply","type":"skProc","line":41,"col":0,"code":"proc Multiply(a: Vector2; n: float): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"n","type":"float"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Multiply a Vector2 by a number</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">2</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">2</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Multiply</span><span class=\"Punctuation\">(</span><span class=\"DecNumber\">2</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># (4,4)</span></pre></p>\n"},{"name":"Subtract","type":"skProc","line":49,"col":0,"code":"proc Subtract(a: Vector2; b: Vector2): Vector2 {.raises: [], tags: [],\n    forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Subtract two Vector2</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">)</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Subtract</span><span class=\"Punctuation\">(</span><span class=\"Identifier\">b</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># (1,1)</span></pre></p>\n"},{"name":"Equals","type":"skProc","line":58,"col":0,"code":"proc Equals(a: Vector2; b: Vector2): bool {.raises: [], tags: [], forbids: [].}","signature":{"return":"bool","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Check if two Vector2 are identic</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">)</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Equals</span><span class=\"Punctuation\">(</span><span class=\"Identifier\">b</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># false</span></pre> or</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">)</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Equals</span><span class=\"Punctuation\">(</span><span class=\"Identifier\">b</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># true</span></pre></p>\n"},{"name":"Dot","type":"skProc","line":76,"col":0,"code":"proc Dot(a: Vector2; b: Vector2): float {.raises: [], tags: [], forbids: [].}","signature":{"return":"float","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Returns the Dot product between two Vector2</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">)</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Dot</span><span class=\"Punctuation\">(</span><span class=\"Identifier\">b</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># 24.0</span></pre></p>\n"},{"name":"down","type":"skProc","line":86,"col":0,"code":"proc down(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"left","type":"skProc","line":89,"col":0,"code":"proc left(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"right","type":"skProc","line":92,"col":0,"code":"proc right(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"up","type":"skProc","line":95,"col":0,"code":"proc up(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"one","type":"skProc","line":98,"col":0,"code":"proc one(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"zero","type":"skProc","line":101,"col":0,"code":"proc zero(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"negativeInfinity","type":"skProc","line":104,"col":0,"code":"proc negativeInfinity(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"positiveInfinity","type":"skProc","line":107,"col":0,"code":"proc positiveInfinity(): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","pragmas":["raises: []","tags: []","forbids: []"]}},{"name":"magnitude","type":"skProc","line":111,"col":0,"code":"proc magnitude(a: Vector2): float {.raises: [], tags: [], forbids: [].}","signature":{"return":"float","arguments":[{"name":"a","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Returns the magnitude/lenght of the Vector2</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">magnitude</span><span class=\"Punctuation\">(</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># 5.656854249492381</span></pre></p>\n"},{"name":"normalized","type":"skProc","line":119,"col":0,"code":"proc normalized(a: Vector2): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Returns a Vector2 with a magnitude of 1 but with the same direction</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">6</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">2</span><span class=\"Punctuation\">)</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">normalized</span><span class=\"Punctuation\">(</span><span class=\"Punctuation\">)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">b</span> <span class=\"Comment\"># (x: 0.9486832980505138, y: 0.3162277660168379)</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">b</span><span class=\"Operator\">.</span><span class=\"Identifier\">magnitude</span><span class=\"Punctuation\">(</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># 0.99999999 = 1</span></pre></p>\n"},{"name":"this","type":"skProc","line":130,"col":0,"code":"proc this(a: Vector2): array[2, float] {.raises: [], tags: [], forbids: [].}","signature":{"return":"array[2, float]","arguments":[{"name":"a","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Get the vector as an array of [x,y]</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">2</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">;</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">this</span><span class=\"Punctuation\">(</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">[</span><span class=\"DecNumber\">0</span><span class=\"Punctuation\">]</span> <span class=\"Comment\"># 2</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">this</span><span class=\"Punctuation\">(</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">[</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">]</span> <span class=\"Comment\"># 4</span></pre></p>\n"},{"name":"ToString","type":"skProc","line":140,"col":0,"code":"proc ToString(a: Vector2): string {.raises: [], tags: [], forbids: [].}","signature":{"return":"string","arguments":[{"name":"a","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Returns a formatted string with the values</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">4</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">;</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">ToString</span><span class=\"Punctuation\">(</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># &quot;x: 3, y: 4&quot;</span></pre></p>\n"},{"name":"unsignedAngle","type":"skProc","line":149,"col":0,"code":"proc unsignedAngle(a: Vector2; b: Vector2): float {.raises: [ValueError],\n    tags: [], forbids: [].}","signature":{"return":"float","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: [ValueError]","tags: []","forbids: []"]},"description":"Gets the unsigned angle in degrees between from and to."},{"name":"Distance","type":"skProc","line":173,"col":0,"code":"proc Distance(a: Vector2; b: Vector2): float {.raises: [], tags: [], forbids: [].}","signature":{"return":"float","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Returns the distance between a and b.</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">;</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">;</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Distance</span><span class=\"Punctuation\">(</span><span class=\"Identifier\">b</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># 2.82842712474619</span></pre></p>\n"},{"name":"Max","type":"skProc","line":183,"col":0,"code":"proc Max(a: Vector2; b: Vector2): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Returns a vector that is made from the largest components of two vectors.</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">;</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">;</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Max</span><span class=\"Punctuation\">(</span><span class=\"Identifier\">b</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># (3,3);</span></pre></p>\n"},{"name":"Min","type":"skProc","line":202,"col":0,"code":"proc Min(a: Vector2; b: Vector2): Vector2 {.raises: [], tags: [], forbids: [].}","signature":{"return":"Vector2","arguments":[{"name":"a","type":"Vector2"},{"name":"b","type":"Vector2"}],"pragmas":["raises: []","tags: []","forbids: []"]},"description":"<p>Returns a vector that is made from the smallest components of two vectors.</p>\n<p><pre class=\"listing\"><span class=\"Keyword\">const</span> <span class=\"Identifier\">a</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">;</span>\n<span class=\"Keyword\">const</span> <span class=\"Identifier\">b</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">Vector2</span> <span class=\"Operator\">=</span> <span class=\"Punctuation\">(</span><span class=\"DecNumber\">3</span><span class=\"Punctuation\">,</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">)</span><span class=\"Punctuation\">;</span>\n<span class=\"Identifier\">echo</span> <span class=\"Identifier\">a</span><span class=\"Operator\">.</span><span class=\"Identifier\">Min</span><span class=\"Punctuation\">(</span><span class=\"Identifier\">b</span><span class=\"Punctuation\">)</span> <span class=\"Comment\"># (1,1);</span></pre></p>\n"}]}